widget/{widgetId}|public|1|PATCH|resource(widget|RESOURCE|widgetId|BASIC|io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetId|syncToken|BASIC|io.airlift.api.ApiResourceVersion|widgetDefinition|RESOURCE|io.airlift.api.servertests.integration.testingserver.external.NewExternalWidget|size|BASIC|io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetSize|SMALL|HUGE|LARGE|name|BASIC|java.lang.String|manufactureDate|BASIC|java.time.Instant|attributes|MAP|java.lang.String)|resource(widget|RESOURCE|widgetId|BASIC|io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetId|syncToken|BASIC|io.airlift.api.ApiResourceVersion|widgetDefinition|RESOURCE|io.airlift.api.servertests.integration.testingserver.external.NewExternalWidget|size|BASIC|io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetSize|SMALL|HUGE|LARGE|name|BASIC|java.lang.String|manufactureDate|BASIC|java.time.Instant|attributes|MAP|java.lang.String)|[widgetId]|[]|[400|401|403]

Metadata:
PATCH
io.airlift.api.servertests.integration.testingserver.external.PublicWidgetApi
patchWidget
public/api/v1/widget/{widgetId}


Return:
ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidget, name=widget, openApiName=Optional.empty, description=Something amazing, components=[ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetId, name=widgetId, openApiName=Optional.empty, description=Widget id, components=[], resourceType=BASIC, containerType=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetId, modifiers=[READ_ONLY], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class io.airlift.api.ApiResourceVersion, name=syncToken, openApiName=Optional.empty, description=Used to ensure consistency for resource updates. A syncToken that is returned
from the server is valid until the resource is updated when a new syncToken will
be generated. Only the latest version of the object is maintained.
, components=[], resourceType=BASIC, containerType=class io.airlift.api.ApiResourceVersion, modifiers=[READ_ONLY], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.NewExternalWidget, name=widgetDefinition, openApiName=Optional[newWidget], description=, components=[ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetSize, name=size, openApiName=Optional.empty, description=Widget size, components=[], resourceType=BASIC, containerType=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetSize, modifiers=[], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional[{Small=A small widget, Huge=A large widget, Large=A huge widget}]], ModelResource[type=class java.lang.String, name=name, openApiName=Optional.empty, description=Item name, components=[], resourceType=BASIC, containerType=class java.lang.String, modifiers=[], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class java.time.Instant, name=manufactureDate, openApiName=Optional.empty, description=Date the item exited the factory, components=[], resourceType=BASIC, containerType=class java.time.Instant, modifiers=[READ_ONLY], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class java.lang.String, name=attributes, openApiName=Optional.empty, description=Bag 'o' stuff, components=[], resourceType=MAP, containerType=java.util.Map<java.lang.String, java.lang.String>, modifiers=[], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty]], resourceType=RESOURCE, containerType=class io.airlift.api.servertests.integration.testingserver.external.NewExternalWidget, modifiers=[IS_UNWRAPPED], quotas=[WIDGETS], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty]], resourceType=RESOURCE, containerType=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidget, modifiers=[HAS_VERSION, HAS_RESOURCE_ID], quotas=[HIDDEN], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty]

Parameter(s):
widgetId

Optional Parameter(s):
none

Body:
ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidget, name=widget, openApiName=Optional.empty, description=Something amazing, components=[ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetId, name=widgetId, openApiName=Optional.empty, description=Widget id, components=[], resourceType=BASIC, containerType=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetId, modifiers=[READ_ONLY], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class io.airlift.api.ApiResourceVersion, name=syncToken, openApiName=Optional.empty, description=Used to ensure consistency for resource updates. A syncToken that is returned
from the server is valid until the resource is updated when a new syncToken will
be generated. Only the latest version of the object is maintained.
, components=[], resourceType=BASIC, containerType=class io.airlift.api.ApiResourceVersion, modifiers=[READ_ONLY], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.NewExternalWidget, name=widgetDefinition, openApiName=Optional[newWidget], description=, components=[ModelResource[type=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetSize, name=size, openApiName=Optional.empty, description=Widget size, components=[], resourceType=BASIC, containerType=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidgetSize, modifiers=[], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional[{Small=A small widget, Huge=A large widget, Large=A huge widget}]], ModelResource[type=class java.lang.String, name=name, openApiName=Optional.empty, description=Item name, components=[], resourceType=BASIC, containerType=class java.lang.String, modifiers=[], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class java.time.Instant, name=manufactureDate, openApiName=Optional.empty, description=Date the item exited the factory, components=[], resourceType=BASIC, containerType=class java.time.Instant, modifiers=[READ_ONLY], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty], ModelResource[type=class java.lang.String, name=attributes, openApiName=Optional.empty, description=Bag 'o' stuff, components=[], resourceType=MAP, containerType=java.util.Map<java.lang.String, java.lang.String>, modifiers=[], quotas=[], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty]], resourceType=RESOURCE, containerType=class io.airlift.api.servertests.integration.testingserver.external.NewExternalWidget, modifiers=[IS_UNWRAPPED], quotas=[WIDGETS], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty]], resourceType=RESOURCE, containerType=class io.airlift.api.servertests.integration.testingserver.external.ExternalWidget, modifiers=[HAS_VERSION, HAS_RESOURCE_ID, PATCH], quotas=[HIDDEN], limitedValues=[], supportsIdLookup=Optional.empty, polyResource=Optional.empty, enumDescriptions=Optional.empty]

Response(s):
400
401
403
